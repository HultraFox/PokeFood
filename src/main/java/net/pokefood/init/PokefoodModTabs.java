
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.pokefood.init;

import net.pokefood.PokefoodMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.event.BuildCreativeModeTabContentsEvent;

import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.CreativeModeTabs;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.network.chat.Component;
import net.minecraft.core.registries.Registries;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD)
public class PokefoodModTabs {
	public static final DeferredRegister<CreativeModeTab> REGISTRY = DeferredRegister.create(Registries.CREATIVE_MODE_TAB, PokefoodMod.MODID);
	public static final RegistryObject<CreativeModeTab> POKE_FOOD = REGISTRY.register("poke_food",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food")).icon(() -> new ItemStack(PokefoodModItems.PUFF_FANCY_PEPPER.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.PUFF_BASIC_SWEET.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_SWEET.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_SWEET.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_SWEET.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_MINT.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_MINT.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_MINT.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_MINT.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_CITRUS.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_CITRUS.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_CITRUS.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_CITRUS.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_MOCHA.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_MOCHA.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_MOCHA.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_MOCHA.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_SPICY.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_SPICY.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_SPICY.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_SPICY.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_HONEY.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_HONEY.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_HONEY.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_HONEY.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_CALM.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_CALM.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_CALM.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_CALM.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_CANDY.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_CANDY.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_CANDY.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_CANDY.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_PEPPER.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_PEPPER.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_PEPPER.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_PEPPER.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_STIFF.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_STIFF.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_STIFF.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_STIFF.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_STRONG.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_STRONG.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_STRONG.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_STRONG.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_TOAST.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_TOAST.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_TOAST.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_TOAST.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_SALTY.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_SALTY.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_SALTY.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_SALTY.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_ANANAS.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_ANANAS.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_ANANAS.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_ANANAS.get());
				tabData.accept(PokefoodModItems.PUFF_BASIC_HIGH.get());
				tabData.accept(PokefoodModItems.PUFF_FROSTED_HIGH.get());
				tabData.accept(PokefoodModItems.PUFF_FANCY_HIGH.get());
				tabData.accept(PokefoodModItems.PUFF_DELUXE_HIGH.get());
				tabData.accept(PokefoodModItems.POFFIN_SPICY.get());
				tabData.accept(PokefoodModItems.POFFIN_SPICY_DRY.get());
				tabData.accept(PokefoodModItems.POFFIN_SPICY_SWEET.get());
				tabData.accept(PokefoodModItems.POFFIN_SPICY_BITTER.get());
				tabData.accept(PokefoodModItems.POFFIN_SPICY_SOUR.get());
				tabData.accept(PokefoodModItems.POFFIN_DRY.get());
				tabData.accept(PokefoodModItems.POFFIN_DRY_SPICY.get());
				tabData.accept(PokefoodModItems.POFFIN_DRY_SWEET.get());
				tabData.accept(PokefoodModItems.POFFIN_DRY_BITTER.get());
				tabData.accept(PokefoodModItems.POFFIN_DRY_SOUR.get());
				tabData.accept(PokefoodModItems.POFFIN_SWEET.get());
				tabData.accept(PokefoodModItems.POFFIN_SWEET_SPICY.get());
				tabData.accept(PokefoodModItems.POFFIN_SWEET_DRY.get());
				tabData.accept(PokefoodModItems.POFFIN_SWEET_BITTER.get());
				tabData.accept(PokefoodModItems.POFFIN_SWEET_SOUR.get());
				tabData.accept(PokefoodModItems.POFFIN_BITTER.get());
				tabData.accept(PokefoodModItems.POFFIN_BITTER_SPICY.get());
				tabData.accept(PokefoodModItems.POFFIN_BITTER_DRY.get());
				tabData.accept(PokefoodModItems.POFFIN_BITTER_SWEET.get());
				tabData.accept(PokefoodModItems.POFFIN_BITTER_SOUR.get());
				tabData.accept(PokefoodModItems.POFFIN_SOUR.get());
				tabData.accept(PokefoodModItems.POFFIN_SOUR_SPICY.get());
				tabData.accept(PokefoodModItems.POFFIN_SOUR_DRY.get());
				tabData.accept(PokefoodModItems.POFFIN_SOUR_SWEET.get());
				tabData.accept(PokefoodModItems.POFFIN_SOUR_BITTER.get());
				tabData.accept(PokefoodModItems.BREAD_SPICY.get());
				tabData.accept(PokefoodModItems.BREAD_DRY.get());
				tabData.accept(PokefoodModItems.BREAD_SWEET.get());
				tabData.accept(PokefoodModItems.BREAD_BITTER.get());
				tabData.accept(PokefoodModItems.BREAD_SOUR.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_TEA.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_TEA_B.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_TEA_R.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_CHERRY.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_LEMO.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_B.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_D.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_G.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_Y.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_R.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_P.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_W.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_COFFEE.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_LATTE.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_TEA_C.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_TEA_BC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_TEA_RC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_LEMO_C.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_CHERRY_C.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_BC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_DC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_GC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_YC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_RC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_PC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_APRI_WC.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_COFFEE_C.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_LATTE_C.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_0.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_1.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_2.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_3.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_5.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_4.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_6.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_7.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_8.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_9.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_10.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_11.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_12.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_13.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_14.get());
				tabData.accept(PokefoodModItems.CANDY_APPLE_15.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_0.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_1.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_2.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_3.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_4.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_5.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_6.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_7.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_8.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_9.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_10.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_11.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_12.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_13.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_14.get());
				tabData.accept(PokefoodModItems.COTTON_CANDY_15.get());
				tabData.accept(PokefoodModItems.CANDY_0.get());
				tabData.accept(PokefoodModItems.CANDY_1.get());
				tabData.accept(PokefoodModItems.CANDY_2.get());
				tabData.accept(PokefoodModItems.CANDY_3.get());
				tabData.accept(PokefoodModItems.CANDY_4.get());
				tabData.accept(PokefoodModItems.CANDY_5.get());
				tabData.accept(PokefoodModItems.CANDY_6.get());
				tabData.accept(PokefoodModItems.CANDY_7.get());
				tabData.accept(PokefoodModItems.CANDY_8.get());
				tabData.accept(PokefoodModItems.CANDY_9.get());
				tabData.accept(PokefoodModItems.CANDY_10.get());
				tabData.accept(PokefoodModItems.CANDY_11.get());
				tabData.accept(PokefoodModItems.CANDY_12.get());
				tabData.accept(PokefoodModItems.CANDY_13.get());
				tabData.accept(PokefoodModItems.CANDY_14.get());
				tabData.accept(PokefoodModItems.CANDY_15.get());
				tabData.accept(PokefoodModItems.CANDY_R_0.get());
				tabData.accept(PokefoodModItems.CANDY_R_1.get());
				tabData.accept(PokefoodModItems.CANDY_R_2.get());
				tabData.accept(PokefoodModItems.CANDY_R_3.get());
				tabData.accept(PokefoodModItems.CANDY_R_4.get());
				tabData.accept(PokefoodModItems.CANDY_R_5.get());
				tabData.accept(PokefoodModItems.CANDY_R_6.get());
				tabData.accept(PokefoodModItems.CANDY_R_7.get());
				tabData.accept(PokefoodModItems.CANDY_R_8.get());
				tabData.accept(PokefoodModItems.CANDY_R_9.get());
				tabData.accept(PokefoodModItems.CANDY_R_10.get());
				tabData.accept(PokefoodModItems.CANDY_R_11.get());
				tabData.accept(PokefoodModItems.CANDY_R_12.get());
				tabData.accept(PokefoodModItems.CANDY_R_13.get());
				tabData.accept(PokefoodModItems.CANDY_R_14.get());
				tabData.accept(PokefoodModItems.CANDY_R_15.get());
				tabData.accept(PokefoodModItems.CANDY_XS_0.get());
				tabData.accept(PokefoodModItems.CANDY_XS_1.get());
				tabData.accept(PokefoodModItems.CANDY_XS_2.get());
				tabData.accept(PokefoodModItems.CANDY_XS_3.get());
				tabData.accept(PokefoodModItems.CANDY_XS_4.get());
				tabData.accept(PokefoodModItems.CANDY_XS_5.get());
				tabData.accept(PokefoodModItems.CANDY_XS_6.get());
				tabData.accept(PokefoodModItems.CANDY_XS_7.get());
				tabData.accept(PokefoodModItems.CANDY_XS_8.get());
				tabData.accept(PokefoodModItems.CANDY_XS_9.get());
				tabData.accept(PokefoodModItems.CANDY_XS_10.get());
				tabData.accept(PokefoodModItems.CANDY_XS_11.get());
				tabData.accept(PokefoodModItems.CANDY_XS_12.get());
				tabData.accept(PokefoodModItems.CANDY_XS_13.get());
				tabData.accept(PokefoodModItems.CANDY_XS_14.get());
				tabData.accept(PokefoodModItems.CANDY_XS_15.get());
				tabData.accept(PokefoodModItems.CANDY_S_0.get());
				tabData.accept(PokefoodModItems.CANDY_S_1.get());
				tabData.accept(PokefoodModItems.CANDY_S_2.get());
				tabData.accept(PokefoodModItems.CANDY_S_3.get());
				tabData.accept(PokefoodModItems.CANDY_S_4.get());
				tabData.accept(PokefoodModItems.CANDY_S_5.get());
				tabData.accept(PokefoodModItems.CANDY_S_6.get());
				tabData.accept(PokefoodModItems.CANDY_S_7.get());
				tabData.accept(PokefoodModItems.CANDY_S_8.get());
				tabData.accept(PokefoodModItems.CANDY_S_9.get());
				tabData.accept(PokefoodModItems.CANDY_S_10.get());
				tabData.accept(PokefoodModItems.CANDY_S_11.get());
				tabData.accept(PokefoodModItems.CANDY_S_12.get());
				tabData.accept(PokefoodModItems.CANDY_S_13.get());
				tabData.accept(PokefoodModItems.CANDY_S_14.get());
				tabData.accept(PokefoodModItems.CANDY_S_15.get());
				tabData.accept(PokefoodModItems.CANDY_M_0.get());
				tabData.accept(PokefoodModItems.CANDY_M_1.get());
				tabData.accept(PokefoodModItems.CANDY_M_2.get());
				tabData.accept(PokefoodModItems.CANDY_M_3.get());
				tabData.accept(PokefoodModItems.CANDY_M_4.get());
				tabData.accept(PokefoodModItems.CANDY_M_5.get());
				tabData.accept(PokefoodModItems.CANDY_M_6.get());
				tabData.accept(PokefoodModItems.CANDY_M_7.get());
				tabData.accept(PokefoodModItems.CANDY_M_8.get());
				tabData.accept(PokefoodModItems.CANDY_M_9.get());
				tabData.accept(PokefoodModItems.CANDY_M_10.get());
				tabData.accept(PokefoodModItems.CANDY_M_11.get());
				tabData.accept(PokefoodModItems.CANDY_M_12.get());
				tabData.accept(PokefoodModItems.CANDY_M_13.get());
				tabData.accept(PokefoodModItems.CANDY_M_14.get());
				tabData.accept(PokefoodModItems.CANDY_M_15.get());
				tabData.accept(PokefoodModItems.CANDY_L_0.get());
				tabData.accept(PokefoodModItems.CANDY_L_1.get());
				tabData.accept(PokefoodModItems.CANDY_L_2.get());
				tabData.accept(PokefoodModItems.CANDY_L_3.get());
				tabData.accept(PokefoodModItems.CANDY_L_4.get());
				tabData.accept(PokefoodModItems.CANDY_L_5.get());
				tabData.accept(PokefoodModItems.CANDY_L_6.get());
				tabData.accept(PokefoodModItems.CANDY_L_7.get());
				tabData.accept(PokefoodModItems.CANDY_L_8.get());
				tabData.accept(PokefoodModItems.CANDY_L_9.get());
				tabData.accept(PokefoodModItems.CANDY_L_10.get());
				tabData.accept(PokefoodModItems.CANDY_L_11.get());
				tabData.accept(PokefoodModItems.CANDY_L_12.get());
				tabData.accept(PokefoodModItems.CANDY_L_13.get());
				tabData.accept(PokefoodModItems.CANDY_L_14.get());
				tabData.accept(PokefoodModItems.CANDY_L_15.get());
				tabData.accept(PokefoodModItems.CANDY_XL_0.get());
				tabData.accept(PokefoodModItems.CANDY_XL_1.get());
				tabData.accept(PokefoodModItems.CANDY_XL_2.get());
				tabData.accept(PokefoodModItems.CANDY_XL_3.get());
				tabData.accept(PokefoodModItems.CANDY_XL_4.get());
				tabData.accept(PokefoodModItems.CANDY_XL_5.get());
				tabData.accept(PokefoodModItems.CANDY_XL_6.get());
				tabData.accept(PokefoodModItems.CANDY_XL_7.get());
				tabData.accept(PokefoodModItems.CANDY_XL_8.get());
				tabData.accept(PokefoodModItems.CANDY_XL_9.get());
				tabData.accept(PokefoodModItems.CANDY_XL_10.get());
				tabData.accept(PokefoodModItems.CANDY_XL_11.get());
				tabData.accept(PokefoodModItems.CANDY_XL_12.get());
				tabData.accept(PokefoodModItems.CANDY_XL_13.get());
				tabData.accept(PokefoodModItems.CANDY_XL_14.get());
				tabData.accept(PokefoodModItems.CANDY_XL_15.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_COOKIES = REGISTRY.register("poke_food_cookies",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_cookies")).icon(() -> new ItemStack(PokefoodModItems.COOKIE_IVYSAUR.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.COOKIE_BULBASAUR.get());
				tabData.accept(PokefoodModItems.COOKIE_IVYSAUR.get());
				tabData.accept(PokefoodModItems.COOKIE_VENUSAUR.get());
				tabData.accept(PokefoodModItems.COOKIE_CHARMANDER.get());
				tabData.accept(PokefoodModItems.COOKIE_CHARMELEON.get());
				tabData.accept(PokefoodModItems.COOKIE_CHARIZARD.get());
				tabData.accept(PokefoodModItems.COOKIE_SQUIRTLE.get());
				tabData.accept(PokefoodModItems.COOKIE_WARTORTLE.get());
				tabData.accept(PokefoodModItems.COOKIE_BLASTOISE.get());
				tabData.accept(PokefoodModItems.COOKIE_CATERPIE.get());
				tabData.accept(PokefoodModItems.COOKIE_METAPOD.get());
				tabData.accept(PokefoodModItems.COOKIE_BUTTERFREE.get());
				tabData.accept(PokefoodModItems.COOKIE_WEEDLE.get());
				tabData.accept(PokefoodModItems.COOKIE_KAKUNA.get());
				tabData.accept(PokefoodModItems.COOKIE_BEEDRILL.get());
				tabData.accept(PokefoodModItems.COOKIE_PIDGEY.get());
				tabData.accept(PokefoodModItems.COOKIE_PIDGEOTTO.get());
				tabData.accept(PokefoodModItems.COOKIE_PIDGEOT.get());
				tabData.accept(PokefoodModItems.COOKIE_RATTATA.get());
				tabData.accept(PokefoodModItems.COOKIE_RATICATE.get());
				tabData.accept(PokefoodModItems.COOKIE_SPEAROW.get());
				tabData.accept(PokefoodModItems.COOKIE_FEAROW.get());
				tabData.accept(PokefoodModItems.COOKIE_EKANS.get());
				tabData.accept(PokefoodModItems.COOKIE_ARBOK.get());
				tabData.accept(PokefoodModItems.COOKIE_PIKACHU.get());
				tabData.accept(PokefoodModItems.COOKIE_RAICHU.get());
				tabData.accept(PokefoodModItems.COOKIE_SANDSHREW.get());
				tabData.accept(PokefoodModItems.COOKIE_SANDSLASH.get());
				tabData.accept(PokefoodModItems.COOKIE_NIDORAN.get());
				tabData.accept(PokefoodModItems.COOKIE_NIDORINA.get());
				tabData.accept(PokefoodModItems.COOKIE_NIDORINO.get());
				tabData.accept(PokefoodModItems.COOKIE_NIDOQUEEN.get());
				tabData.accept(PokefoodModItems.COOKIE_NIDOKING.get());
				tabData.accept(PokefoodModItems.COOKIE_CLEFAIRY.get());
				tabData.accept(PokefoodModItems.COOKIE_CLEFABLE.get());
				tabData.accept(PokefoodModItems.COOKIE_VULPIX.get());
				tabData.accept(PokefoodModItems.COOKIE_NINETALES.get());
				tabData.accept(PokefoodModItems.COOKIE_JIGGLYPUFF.get());
				tabData.accept(PokefoodModItems.COOKIE_WIGGLYTUFF.get());
				tabData.accept(PokefoodModItems.COOKIE_ZUBAT.get());
				tabData.accept(PokefoodModItems.COOKIE_GOLBAT.get());
				tabData.accept(PokefoodModItems.COOKIE_ODDISH.get());
				tabData.accept(PokefoodModItems.COOKIE_GLOOM.get());
				tabData.accept(PokefoodModItems.COOKIE_VILEPLUME.get());
				tabData.accept(PokefoodModItems.COOKIE_PARAS.get());
				tabData.accept(PokefoodModItems.COOKIE_PARASECT.get());
				tabData.accept(PokefoodModItems.COOKIE_VENONAT.get());
				tabData.accept(PokefoodModItems.COOKIE_VENOMOTH.get());
				tabData.accept(PokefoodModItems.COOKIE_DIGLETT.get());
				tabData.accept(PokefoodModItems.COOKIE_DUGTRIO.get());
				tabData.accept(PokefoodModItems.COOKIE_MEOWTH.get());
				tabData.accept(PokefoodModItems.COOKIE_PERSIAN.get());
				tabData.accept(PokefoodModItems.COOKIE_PSYDUCK.get());
				tabData.accept(PokefoodModItems.COOKIE_GOLDUCK.get());
				tabData.accept(PokefoodModItems.COOKIE_MANKEY.get());
				tabData.accept(PokefoodModItems.COOKIE_PRIMEAPE.get());
				tabData.accept(PokefoodModItems.COOKIE_GROWLITHE.get());
				tabData.accept(PokefoodModItems.COOKIE_ARCANINE.get());
				tabData.accept(PokefoodModItems.COOKIE_POLIWAG.get());
				tabData.accept(PokefoodModItems.COOKIE_POLIWHIRL.get());
				tabData.accept(PokefoodModItems.COOKIE_POLIWRATH.get());
				tabData.accept(PokefoodModItems.COOKIE_ABRA.get());
				tabData.accept(PokefoodModItems.COOKIE_KADABRA.get());
				tabData.accept(PokefoodModItems.COOKIE_ALAKAZAM.get());
				tabData.accept(PokefoodModItems.COOKIE_MACHOP.get());
				tabData.accept(PokefoodModItems.COOKIE_MACHOKE.get());
				tabData.accept(PokefoodModItems.COOKIE_MACHAMP.get());
				tabData.accept(PokefoodModItems.COOKIE_BELLSPROUT.get());
				tabData.accept(PokefoodModItems.COOKIE_WEEPINBELL.get());
				tabData.accept(PokefoodModItems.COOKIE_VICTREEBEL.get());
				tabData.accept(PokefoodModItems.COOKIE_TENTACOOL.get());
				tabData.accept(PokefoodModItems.COOKIE_TENTACRUEL.get());
				tabData.accept(PokefoodModItems.COOKIE_GEODUDE.get());
				tabData.accept(PokefoodModItems.COOKIE_GRAVELER.get());
				tabData.accept(PokefoodModItems.COOKIE_GOLEM.get());
				tabData.accept(PokefoodModItems.COOKIE_PONYTA.get());
				tabData.accept(PokefoodModItems.COOKIE_RAPIDASH.get());
				tabData.accept(PokefoodModItems.COOKIE_SLOWPOKE.get());
				tabData.accept(PokefoodModItems.COOKIE_SLOWBRO.get());
				tabData.accept(PokefoodModItems.COOKIE_MAGNEMITE.get());
				tabData.accept(PokefoodModItems.COOKIE_MAGNETON.get());
				tabData.accept(PokefoodModItems.COOKIE_FARFETCHD.get());
				tabData.accept(PokefoodModItems.COOKIE_DODUO.get());
				tabData.accept(PokefoodModItems.COOKIE_DODRIO.get());
				tabData.accept(PokefoodModItems.COOKIE_SEEL.get());
				tabData.accept(PokefoodModItems.COOKIE_DEWGONG.get());
				tabData.accept(PokefoodModItems.COOKIE_GRIMGER.get());
				tabData.accept(PokefoodModItems.COOKIE_MUK.get());
				tabData.accept(PokefoodModItems.COOKIE_SHELLDER.get());
				tabData.accept(PokefoodModItems.COOKIE_CLOYSTER.get());
				tabData.accept(PokefoodModItems.COOKIE_GASTLY.get());
				tabData.accept(PokefoodModItems.COOKIE_HAUNTER.get());
				tabData.accept(PokefoodModItems.COOKIE_GENGAR.get());
				tabData.accept(PokefoodModItems.COOKIE_ONIX.get());
				tabData.accept(PokefoodModItems.COOKIE_DROWZEE.get());
				tabData.accept(PokefoodModItems.COOKIE_HYPNO.get());
				tabData.accept(PokefoodModItems.COOKIE_KRABBY.get());
				tabData.accept(PokefoodModItems.COOKIE_KINGLER.get());
				tabData.accept(PokefoodModItems.COOKIE_VOLTORB.get());
				tabData.accept(PokefoodModItems.COOKIE_ELECTRODE.get());
				tabData.accept(PokefoodModItems.COOKIE_EXEGGCUTE.get());
				tabData.accept(PokefoodModItems.COOKIE_EXEGGUTOR.get());
				tabData.accept(PokefoodModItems.COOKIE_CUBONE.get());
				tabData.accept(PokefoodModItems.COOKIE_MAROWAK.get());
				tabData.accept(PokefoodModItems.COOKIE_HITMONLEE.get());
				tabData.accept(PokefoodModItems.COOKIE_HITMONCHAN.get());
				tabData.accept(PokefoodModItems.COOKIE_LICKITUNG.get());
				tabData.accept(PokefoodModItems.COOKIE_KOFFING.get());
				tabData.accept(PokefoodModItems.COOKIE_WEEZING.get());
				tabData.accept(PokefoodModItems.COOKIE_RHYHORN.get());
				tabData.accept(PokefoodModItems.COOKIE_RHYDON.get());
				tabData.accept(PokefoodModItems.COOKIE_CHANSEY.get());
				tabData.accept(PokefoodModItems.COOKIE_TANGELA.get());
				tabData.accept(PokefoodModItems.COOKIE_KANGASKHAN.get());
				tabData.accept(PokefoodModItems.COOKIE_HORSEA.get());
				tabData.accept(PokefoodModItems.COOKIE_SEADRA.get());
				tabData.accept(PokefoodModItems.COOKIE_SEAKING.get());
				tabData.accept(PokefoodModItems.COOKIE_GOLDEEN.get());
				tabData.accept(PokefoodModItems.COOKIE_STARYU.get());
				tabData.accept(PokefoodModItems.COOKIE_STARMIE.get());
				tabData.accept(PokefoodModItems.COOKIE_MRMIME.get());
				tabData.accept(PokefoodModItems.COOKIE_SCYTHER.get());
				tabData.accept(PokefoodModItems.COOKIE_JYNX.get());
				tabData.accept(PokefoodModItems.COOKIE_ELECTABUZZ.get());
				tabData.accept(PokefoodModItems.COOKIE_MAGMAR.get());
				tabData.accept(PokefoodModItems.COOKIE_PINSIR.get());
				tabData.accept(PokefoodModItems.COOKIE_TAUROS.get());
				tabData.accept(PokefoodModItems.COOKIE_MAGIKARP.get());
				tabData.accept(PokefoodModItems.COOKIE_GYARADOS.get());
				tabData.accept(PokefoodModItems.COOKIE_LAPRAS.get());
				tabData.accept(PokefoodModItems.COOKIE_DITTO.get());
				tabData.accept(PokefoodModItems.COOKIE_EEVEE.get());
				tabData.accept(PokefoodModItems.COOKIE_VAPOREON.get());
				tabData.accept(PokefoodModItems.COOKIE_JOLTEON.get());
				tabData.accept(PokefoodModItems.COOKIE_FLAREON.get());
				tabData.accept(PokefoodModItems.COOKIE_PORYGON.get());
				tabData.accept(PokefoodModItems.COOKIE_OMANYTE.get());
				tabData.accept(PokefoodModItems.COOKIE_OMASTAR.get());
				tabData.accept(PokefoodModItems.COOKIE_KABUTO.get());
				tabData.accept(PokefoodModItems.COOKIE_KABUTOPS.get());
				tabData.accept(PokefoodModItems.COOKIE_AERODACTYL.get());
				tabData.accept(PokefoodModItems.COOKIE_SNORLAX.get());
				tabData.accept(PokefoodModItems.COOKIE_ARTICUNO.get());
				tabData.accept(PokefoodModItems.COOKIE_ZAPDOS.get());
				tabData.accept(PokefoodModItems.COOKIE_MOLTRES.get());
				tabData.accept(PokefoodModItems.COOKIE_DRATINI.get());
				tabData.accept(PokefoodModItems.COOKIE_DRAGONAIR.get());
				tabData.accept(PokefoodModItems.COOKIE_DRAGONITE.get());
				tabData.accept(PokefoodModItems.COOKIE_MEWTWO.get());
				tabData.accept(PokefoodModItems.COOKIE_MEW.get());
				tabData.accept(PokefoodModItems.COOKIE_POKEBALL.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_HUNT = REGISTRY.register("poke_food_hunt",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_hunt")).icon(() -> new ItemStack(PokefoodModItems.MAGIKARP.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.COOKED_CRAB_CLAW.get());
				tabData.accept(PokefoodModItems.COOKED_SCIZOR_CLAW.get());
				tabData.accept(PokefoodModItems.COOKED_CLAUNCHER_CLAW.get());
				tabData.accept(PokefoodModItems.COOKED_CRABRAWLER_CLAW.get());
				tabData.accept(PokefoodModItems.COOKED_FLAMING_RIB.get());
				tabData.accept(PokefoodModItems.COOKED_FAIRY_MEAT.get());
				tabData.accept(PokefoodModItems.COOKED_STATIC_STEAK.get());
				tabData.accept(PokefoodModItems.COOKED_NIDO_MEAT.get());
				tabData.accept(PokefoodModItems.COOKED_DUCK_LEG.get());
				tabData.accept(PokefoodModItems.COOKED_HOSE_MEAT.get());
				tabData.accept(PokefoodModItems.COOKED_STIFF_STEAK.get());
				tabData.accept(PokefoodModItems.COOKED_WATERY_MEAT.get());
				tabData.accept(PokefoodModItems.COOKED_SPIDER_MEAT.get());
				tabData.accept(PokefoodModItems.COOKED_FLUFFY_MEAT.get());
				tabData.accept(PokefoodModItems.GRILLED_SAND_TAIL.get());
				tabData.accept(PokefoodModItems.COOKED_SLOWPOKE_TAIL.get());
				tabData.accept(PokefoodModItems.ROSTED_KADABRA_TAIL.get());
				tabData.accept(PokefoodModItems.COOKED_BLUE_FIN.get());
				tabData.accept(PokefoodModItems.COOKED_MANTA_FIN.get());
				tabData.accept(PokefoodModItems.COOKED_PINK_FIN.get());
				tabData.accept(PokefoodModItems.GRILLED_WOOPER_TAIL.get());
				tabData.accept(PokefoodModItems.COOKED_BIBAREL_TAIL.get());
				tabData.accept(PokefoodModItems.COOKED_PLUSLE_EAR.get());
				tabData.accept(PokefoodModItems.COOKED_MINUN_EAR.get());
				tabData.accept(PokefoodModItems.GRILLED_TENTALCE.get());
				tabData.accept(PokefoodModItems.COOKED_CLOBBOPUS_TENTACLE.get());
				tabData.accept(PokefoodModItems.ROSTED_CATERPIE.get());
				tabData.accept(PokefoodModItems.GRILLED_WURMPLE.get());
				tabData.accept(PokefoodModItems.COOKED_HERACROSS_HORN.get());
				tabData.accept(PokefoodModItems.GRILLED_MAGIKARP.get());
				tabData.accept(PokefoodModItems.ROSTED_GOLDEEN.get());
				tabData.accept(PokefoodModItems.GRILLED_SEAKING.get());
				tabData.accept(PokefoodModItems.FILLETED_LUVDISC.get());
				tabData.accept(PokefoodModItems.GRILLED_FEEBAS.get());
				tabData.accept(PokefoodModItems.SOUP_IN_SHELL.get());
				tabData.accept(PokefoodModItems.COOKED_GREEN_SLICE.get());
				tabData.accept(PokefoodModItems.BLACK_PEARL.get());
				tabData.accept(PokefoodModItems.ROSTED_DIGLETT_NOSE.get());
				tabData.accept(PokefoodModItems.CHICKEN_LEG.get());
				tabData.accept(PokefoodModItems.CRAB_CLAW.get());
				tabData.accept(PokefoodModItems.SCIZOR_CLAW.get());
				tabData.accept(PokefoodModItems.CLAUNCHER_CLAW.get());
				tabData.accept(PokefoodModItems.CRABRAWLER_CLAW.get());
				tabData.accept(PokefoodModItems.FLAMING_RIB.get());
				tabData.accept(PokefoodModItems.FAIRY_MEAT.get());
				tabData.accept(PokefoodModItems.STATIC_STEAK.get());
				tabData.accept(PokefoodModItems.NIDO_MEAT.get());
				tabData.accept(PokefoodModItems.DUCK_LEG.get());
				tabData.accept(PokefoodModItems.HORSE_MEAT.get());
				tabData.accept(PokefoodModItems.STIFF_STEAK.get());
				tabData.accept(PokefoodModItems.WATERY_MEAT.get());
				tabData.accept(PokefoodModItems.SPIDER_MEAT.get());
				tabData.accept(PokefoodModItems.FLUFFY_MEAT.get());
				tabData.accept(PokefoodModItems.SAND_TAIL.get());
				tabData.accept(PokefoodModItems.SLOWPOKE_TAIL.get());
				tabData.accept(PokefoodModItems.KADABRA_TAIL.get());
				tabData.accept(PokefoodModItems.WOOPER_TAIL.get());
				tabData.accept(PokefoodModItems.BIBAREL_TAIL.get());
				tabData.accept(PokefoodModItems.BLUE_FIN.get());
				tabData.accept(PokefoodModItems.MANTA_FIN.get());
				tabData.accept(PokefoodModItems.PINK_FIN.get());
				tabData.accept(PokefoodModItems.PLUSLE_EAR.get());
				tabData.accept(PokefoodModItems.MINUN_EAR.get());
				tabData.accept(PokefoodModItems.TENTACLE.get());
				tabData.accept(PokefoodModItems.CLOBBOPUS_TENTACLE.get());
				tabData.accept(PokefoodModItems.CATERPIE_ON_A_STICK.get());
				tabData.accept(PokefoodModItems.WURMPLE_ON_A_STICK.get());
				tabData.accept(PokefoodModItems.HERACROSS_HORN.get());
				tabData.accept(PokefoodModItems.UNOWN_PIECE.get());
				tabData.accept(PokefoodModItems.MAGIKARP.get());
				tabData.accept(PokefoodModItems.GOLDEEN.get());
				tabData.accept(PokefoodModItems.SEAKING.get());
				tabData.accept(PokefoodModItems.LUVDISC.get());
				tabData.accept(PokefoodModItems.FEEBAS.get());
				tabData.accept(PokefoodModItems.SHELL.get());
				tabData.accept(PokefoodModItems.GREEN_SLICE.get());
				tabData.accept(PokefoodModItems.CATERPIE.get());
				tabData.accept(PokefoodModItems.WURMPLE.get());
				tabData.accept(PokefoodModItems.DIG_NOSE.get());
				tabData.accept(PokefoodModItems.STAR_BITE.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_OTHERS = REGISTRY.register("poke_food_others",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_others")).icon(() -> new ItemStack(PokefoodModBlocks.CARDBOARD_BOX.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.TEA_SEEDS.get());
				tabData.accept(PokefoodModItems.BLACK_TEA_SEEDS.get());
				tabData.accept(PokefoodModItems.LEMON_SEEDS.get());
				tabData.accept(PokefoodModItems.CALCUIM_SEEDS.get());
				tabData.accept(PokefoodModItems.LEEK_SEEDS.get());
				tabData.accept(PokefoodModItems.ONION_SEEDS.get());
				tabData.accept(PokefoodModItems.LETTUCE_SEEDS.get());
				tabData.accept(PokefoodModItems.RICE_SEEDS.get());
				tabData.accept(PokefoodModItems.BANANA_LEAVES_ITEM.get());
				tabData.accept(PokefoodModBlocks.GRAPE_SPROUT.get().asItem());
				tabData.accept(PokefoodModItems.SMALL_BAG.get());
				tabData.accept(PokefoodModItems.BAG_TEA.get());
				tabData.accept(PokefoodModItems.BAG_BLACK_TEA.get());
				tabData.accept(PokefoodModItems.BAG_ROSERADE_TEA.get());
				tabData.accept(PokefoodModItems.BAG_CHERRY_DRY.get());
				tabData.accept(PokefoodModItems.WHEAT_BAG.get());
				tabData.accept(PokefoodModItems.BAG_CURD.get());
				tabData.accept(PokefoodModItems.BURNT_BAG.get());
				tabData.accept(PokefoodModItems.SALT.get());
				tabData.accept(PokefoodModItems.CARBON_POWDER.get());
				tabData.accept(PokefoodModItems.OIL.get());
				tabData.accept(PokefoodModItems.GREASE.get());
				tabData.accept(PokefoodModItems.OILY_JUNK.get());
				tabData.accept(PokefoodModItems.CUP_UNCOOKED.get());
				tabData.accept(PokefoodModItems.CUP.get());
				tabData.accept(PokefoodModItems.PLATE_UNCOOKED.get());
				tabData.accept(PokefoodModItems.PLATE.get());
				tabData.accept(PokefoodModItems.BIG_GLASS.get());
				tabData.accept(PokefoodModItems.WINE_GLASS.get());
				tabData.accept(PokefoodModItems.SODA_BOTTLE.get());
				tabData.accept(PokefoodModItems.POP_BALL.get());
				tabData.accept(PokefoodModItems.CLOTH.get());
				tabData.accept(PokefoodModItems.CARDBOARD.get());
				tabData.accept(PokefoodModItems.ROZELL.get());
				tabData.accept(PokefoodModBlocks.POT_EMPTY.get().asItem());
				tabData.accept(PokefoodModBlocks.CARBONIZER.get().asItem());
				tabData.accept(PokefoodModBlocks.OVEN.get().asItem());
				tabData.accept(PokefoodModBlocks.MIXER_RED.get().asItem());
				tabData.accept(PokefoodModBlocks.MIXER_PINK.get().asItem());
				tabData.accept(PokefoodModBlocks.MIXER_YELLOW.get().asItem());
				tabData.accept(PokefoodModBlocks.MIXER_GREEN.get().asItem());
				tabData.accept(PokefoodModBlocks.MIXER_BLUE.get().asItem());
				tabData.accept(PokefoodModBlocks.KEG.get().asItem());
				tabData.accept(PokefoodModBlocks.KEG_FUNNEL.get().asItem());
				tabData.accept(PokefoodModBlocks.FRYER.get().asItem());
				tabData.accept(PokefoodModBlocks.ICE_CREAM_MAKER.get().asItem());
				tabData.accept(PokefoodModBlocks.ICE_CREAM_EXTENTION.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_MAKER.get().asItem());
				tabData.accept(PokefoodModBlocks.CHEESE_MOLD.get().asItem());
				tabData.accept(PokefoodModBlocks.CREPE_MAKER.get().asItem());
				tabData.accept(PokefoodModBlocks.CURRY_POT_UNLIT.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_0.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_1.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_2.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_4.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_5.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_3.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_6.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_7.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_8.get().asItem());
				tabData.accept(PokefoodModBlocks.SUGAR_MELTER_9.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_0.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_1.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_2.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_3.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_4.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_5.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_6.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_7.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_9.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_8.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_10.get().asItem());
				tabData.accept(PokefoodModBlocks.HEATER.get().asItem());
				tabData.accept(PokefoodModBlocks.COOLER_BLUE.get().asItem());
				tabData.accept(PokefoodModBlocks.COOLER_GREEN.get().asItem());
				tabData.accept(PokefoodModBlocks.COOLER_YELLOW.get().asItem());
				tabData.accept(PokefoodModBlocks.COOLER_PINK.get().asItem());
				tabData.accept(PokefoodModBlocks.COOLER_RED.get().asItem());
				tabData.accept(PokefoodModBlocks.DISPLAY_CASE_EMPTY.get().asItem());
				tabData.accept(PokefoodModBlocks.CONE_DISPLAY.get().asItem());
				tabData.accept(PokefoodModBlocks.BIG_BAG.get().asItem());
				tabData.accept(PokefoodModItems.CARDBOARD_BOX_ITEM.get());
				tabData.accept(PokefoodModItems.CANDY_BOX_ITEM.get());
				tabData.accept(PokefoodModItems.APRICORN_BOX_ITEM_D.get());
				tabData.accept(PokefoodModItems.APRICORN_BOX_ITEM_B.get());
				tabData.accept(PokefoodModItems.APRICORN_BOX_ITEM_G.get());
				tabData.accept(PokefoodModItems.APRICORN_BOX_ITEM_Y.get());
				tabData.accept(PokefoodModItems.APRICORN_BOX_ITEM_R.get());
				tabData.accept(PokefoodModItems.APRICORN_BOX_ITEM_P.get());
				tabData.accept(PokefoodModItems.APRICORN_BOX_ITEM_W.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_0.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_1.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_2.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_3.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_4.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_5.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_6.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_7.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_8.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_9.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_10.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_11.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_12.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_13.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_14.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_EMPTY_15.get());
				tabData.accept(PokefoodModBlocks.PACK_EMPTY.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_APRI_D.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_APRI_B.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_APRI_G.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_APRI_Y.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_APRI_R.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_APRI_P.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_APRI_W.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_TEA.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_TEA_BLACK.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_TEA_ROSERADE.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_CHERRY.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_LEMONADE.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_POP.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_COFFEE.get().asItem());
				tabData.accept(PokefoodModBlocks.PACK_LATTE.get().asItem());
				tabData.accept(PokefoodModItems.MALT_BUCKET.get());
				tabData.accept(PokefoodModItems.BEER_BUCKET.get());
				tabData.accept(PokefoodModItems.BANANA_TEA_BEER_BUCKET.get());
				tabData.accept(PokefoodModItems.CHERRY_CALCUIM_BEER_BUCKET.get());
				tabData.accept(PokefoodModItems.BRANDY_BUCKET.get());
				tabData.accept(PokefoodModItems.CIDRONADE_BUCKET.get());
				tabData.accept(PokefoodModItems.ARCEUM_BUCKET.get());
				tabData.accept(PokefoodModItems.APRI_ALCOHOL_D_BUCKET.get());
				tabData.accept(PokefoodModItems.APRI_ALCOHOL_B_BUCKET.get());
				tabData.accept(PokefoodModItems.APRI_ALCOHOL_G_BUCKET.get());
				tabData.accept(PokefoodModItems.APRI_ALCOHOL_Y_BUCKET.get());
				tabData.accept(PokefoodModItems.APRI_ALCOHOL_R_BUCKET.get());
				tabData.accept(PokefoodModItems.APRI_ALCOHOL_P_BUCKET.get());
				tabData.accept(PokefoodModItems.APRI_ALCOHOL_W_BUCKET.get());
				tabData.accept(PokefoodModItems.RED_WINE_BUCKET.get());
				tabData.accept(PokefoodModItems.WHITE_WINE_BUCKET.get());
				tabData.accept(PokefoodModItems.ROSE_WINE_BUCKET.get());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_0.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_1.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_2.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_3.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_4.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_5.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_6.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_7.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_9.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_8.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_10.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_11.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_12.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_13.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_14.get().asItem());
				tabData.accept(PokefoodModBlocks.CRYSTALIZED_SUGAR_BLOCK_15.get().asItem());
				tabData.accept(PokefoodModBlocks.MORTAR_AND_PESTLE_11.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_BUILDING = REGISTRY.register("poke_food_building",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_building")).icon(() -> new ItemStack(PokefoodModBlocks.RESTAURANT_SOFA_CORNER_5.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModBlocks.CHAIR_0.get().asItem());
				tabData.accept(PokefoodModBlocks.CHAIR_1.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_0.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_1.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_2.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_3.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_4.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_5.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_6.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_7.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_8.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_9.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_10.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_0.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_1.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_2.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_3.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_4.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_6.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_5.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_7.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_8.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_9.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_10.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_11.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_12.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_13.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_14.get().asItem());
				tabData.accept(PokefoodModBlocks.BARSTOOL_15.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_0.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_1.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_2.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_3.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_4.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_5.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_6.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_7.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_8.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_9.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_10.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_11.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_12.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_13.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_14.get().asItem());
				tabData.accept(PokefoodModBlocks.RESTAURANT_SOFA_15.get().asItem());
				tabData.accept(PokefoodModBlocks.LAMP_0_OFF.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_0.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_1.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_2.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_3.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_4.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_5.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_7.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_6.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_8.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_9.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_10.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_11.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_12.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_13.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_14.get().asItem());
				tabData.accept(PokefoodModBlocks.CANDY_MACHINE_15.get().asItem());
				tabData.accept(PokefoodModBlocks.COFFEE_TABLE_11.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_INGREDIENTS = REGISTRY.register("poke_food_ingredients",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_ingredients")).icon(() -> new ItemStack(PokefoodModItems.SPICY_JUICE.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.TEA_LEAF.get());
				tabData.accept(PokefoodModItems.BLACK_TEA_LEAF.get());
				tabData.accept(PokefoodModItems.ROSERADE_TEA_LEAF.get());
				tabData.accept(PokefoodModItems.CALCUIM.get());
				tabData.accept(PokefoodModItems.LEMON.get());
				tabData.accept(PokefoodModItems.LEMON_SLICE.get());
				tabData.accept(PokefoodModItems.LIME.get());
				tabData.accept(PokefoodModItems.LIME_SLICE.get());
				tabData.accept(PokefoodModItems.LEEK.get());
				tabData.accept(PokefoodModItems.LETTUCE.get());
				tabData.accept(PokefoodModItems.ONION.get());
				tabData.accept(PokefoodModItems.RICE.get());
				tabData.accept(PokefoodModItems.GREEN_GRAPES.get());
				tabData.accept(PokefoodModItems.BLACK_GRAPES.get());
				tabData.accept(PokefoodModItems.BANANA.get());
				tabData.accept(PokefoodModItems.CHERRY.get());
				tabData.accept(PokefoodModItems.DRY_CHERRY.get());
				tabData.accept(PokefoodModItems.COFFEE_BEANS.get());
				tabData.accept(PokefoodModItems.COFFEE_POWDER.get());
				tabData.accept(PokefoodModItems.POFFIN_DOUGH_SPICY.get());
				tabData.accept(PokefoodModItems.POFFIN_DOUGH_DRY.get());
				tabData.accept(PokefoodModItems.POFFIN_DOUGH_SWEET.get());
				tabData.accept(PokefoodModItems.POFFIN_DOUGH_BITTER.get());
				tabData.accept(PokefoodModItems.POFFIN_DOUGH_SOUR.get());
				tabData.accept(PokefoodModItems.COOKIE_DOUGH.get());
				tabData.accept(PokefoodModItems.SPARKLES_SPICY.get());
				tabData.accept(PokefoodModItems.SPARKLES_DRY.get());
				tabData.accept(PokefoodModItems.SPARKLES_SWEET.get());
				tabData.accept(PokefoodModItems.SPARKLES_BITTER.get());
				tabData.accept(PokefoodModItems.SPARKLES_SOUR.get());
				tabData.accept(PokefoodModItems.SPICY_REP_1.get());
				tabData.accept(PokefoodModItems.SPICY_REP_2.get());
				tabData.accept(PokefoodModItems.SPICY_REP_3.get());
				tabData.accept(PokefoodModItems.SPICY_REP_4.get());
				tabData.accept(PokefoodModItems.DRY_REP_1.get());
				tabData.accept(PokefoodModItems.DRY_REP_2.get());
				tabData.accept(PokefoodModItems.DRY_REP_3.get());
				tabData.accept(PokefoodModItems.DRY_REP_4.get());
				tabData.accept(PokefoodModItems.SWEET_REP_1.get());
				tabData.accept(PokefoodModItems.SWEET_REP_2.get());
				tabData.accept(PokefoodModItems.SWEET_REP_3.get());
				tabData.accept(PokefoodModItems.SWEET_REP_4.get());
				tabData.accept(PokefoodModItems.BITTER_REP_1.get());
				tabData.accept(PokefoodModItems.BITTER_REP_2.get());
				tabData.accept(PokefoodModItems.BITTER_REP_3.get());
				tabData.accept(PokefoodModItems.BITTER_REP_4.get());
				tabData.accept(PokefoodModItems.SOUR_REP_1.get());
				tabData.accept(PokefoodModItems.SOUR_REP_2.get());
				tabData.accept(PokefoodModItems.SOUR_REP_3.get());
				tabData.accept(PokefoodModItems.SOUR_REP_4.get());
				tabData.accept(PokefoodModItems.WHIPPED_CREAM.get());
				tabData.accept(PokefoodModItems.NECTAR.get());
				tabData.accept(PokefoodModItems.ICE_CREAM_CONE.get());
				tabData.accept(PokefoodModItems.RAW_CHIPS.get());
				tabData.accept(PokefoodModItems.ROASTED_TEA_LEAVE.get());
				tabData.accept(PokefoodModItems.ROASTED_BLACK_TEA_LEAVE.get());
				tabData.accept(PokefoodModItems.ROASTED_RED_TEA_LEAVE.get());
				tabData.accept(PokefoodModItems.CURRY_MIX.get());
				tabData.accept(PokefoodModItems.SPICY_JUICE.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_0.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_1.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_2.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_3.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_4.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_5.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_6.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_7.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_8.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_9.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_10.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_11.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_12.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_13.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_14.get());
				tabData.accept(PokefoodModItems.CRYSTALIZED_SUGAR_15.get());
				tabData.accept(PokefoodModItems.APPLE_ON_A_STICK.get());
				tabData.accept(PokefoodModBlocks.CHEESE_FULL_0.get().asItem());
				tabData.accept(PokefoodModBlocks.CHEESE_FULL_1.get().asItem());
				tabData.accept(PokefoodModBlocks.CHEESE_FULL_2.get().asItem());
				tabData.accept(PokefoodModBlocks.CHEESE_FULL_3.get().asItem());
				tabData.accept(PokefoodModBlocks.CHEESE_FULL_4.get().asItem());
				tabData.accept(PokefoodModBlocks.CHEESE_FULL_5.get().asItem());
				tabData.accept(PokefoodModItems.CHEESE_S_0.get());
				tabData.accept(PokefoodModItems.CHEESE_S_1.get());
				tabData.accept(PokefoodModItems.CHEESE_S_2.get());
				tabData.accept(PokefoodModItems.CHEESE_S_3.get());
				tabData.accept(PokefoodModItems.CHEESE_S_4.get());
				tabData.accept(PokefoodModItems.CHEESE_S_5.get());
				tabData.accept(PokefoodModItems.CREPE_DOUGH_BUCKET.get());
				tabData.accept(PokefoodModItems.TEA_BUCKET.get());
				tabData.accept(PokefoodModItems.BLACK_TEA_BUCKET.get());
				tabData.accept(PokefoodModItems.ROSERADE_TEA_BUCKET.get());
				tabData.accept(PokefoodModItems.COFFEE_BUCKET.get());
				tabData.accept(PokefoodModItems.COFFEE_ICED_BUCKET.get());
				tabData.accept(PokefoodModItems.LATTE_BUCKET.get());
				tabData.accept(PokefoodModItems.LEMONADE_BUCKET.get());
				tabData.accept(PokefoodModItems.FRESH_WATER_BUCKET.get());
				tabData.accept(PokefoodModItems.CHERRY_INFUSION_BUCKET.get());
				tabData.accept(PokefoodModItems.APRIJUICE_D_BUCKET.get());
				tabData.accept(PokefoodModItems.APRIJUICE_B_BUCKET.get());
				tabData.accept(PokefoodModItems.APRIJUICE_G_BUCKET.get());
				tabData.accept(PokefoodModItems.APRIJUICE_Y_BUCKET.get());
				tabData.accept(PokefoodModItems.APRIJUICE_R_BUCKET.get());
				tabData.accept(PokefoodModItems.APRIJUICE_P_BUCKET.get());
				tabData.accept(PokefoodModItems.APRIJUICE_W_BUCKET.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_CURRIES = REGISTRY.register("poke_food_curries",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_curries")).icon(() -> new ItemStack(PokefoodModItems.CURRY_POTATO.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.CURRY.get());
				tabData.accept(PokefoodModItems.CURRY_BEEF.get());
				tabData.accept(PokefoodModItems.CURRY_SWEET_BERRIES.get());
				tabData.accept(PokefoodModItems.CURRY_GLOW_BERRIES.get());
				tabData.accept(PokefoodModItems.CURRY_RABBIT.get());
				tabData.accept(PokefoodModItems.CURRY_MUTTON.get());
				tabData.accept(PokefoodModItems.CURRY_SALMON.get());
				tabData.accept(PokefoodModItems.CURRY_COD.get());
				tabData.accept(PokefoodModItems.CURRY_POTATO.get());
				tabData.accept(PokefoodModItems.CURRY_BEETROOT.get());
				tabData.accept(PokefoodModItems.CURRY_CARROT.get());
				tabData.accept(PokefoodModItems.CURRY_APPLE.get());
				tabData.accept(PokefoodModItems.CURRY_PORK.get());
				tabData.accept(PokefoodModItems.CURRY_CLAW_F.get());
				tabData.accept(PokefoodModItems.CURRY_PEARL.get());
				tabData.accept(PokefoodModItems.CURRY_DUCK_F.get());
				tabData.accept(PokefoodModItems.CURRY_FRIED_CHICKEN.get());
				tabData.accept(PokefoodModItems.CURRY_NIDO.get());
				tabData.accept(PokefoodModItems.CURRY_DUCK.get());
				tabData.accept(PokefoodModItems.CURRY_BLUE_FIN.get());
				tabData.accept(PokefoodModItems.CURRY_HORN.get());
				tabData.accept(PokefoodModItems.CURRY_TAIL_F.get());
				tabData.accept(PokefoodModItems.CURRY_BANANA.get());
				tabData.accept(PokefoodModItems.CURRY_GOLDEEN.get());
				tabData.accept(PokefoodModItems.CURRY_WOOPER.get());
				tabData.accept(PokefoodModItems.CURRY_FAIRY_F.get());
				tabData.accept(PokefoodModItems.CURRY_MAGIKARP.get());
				tabData.accept(PokefoodModItems.CURRY_KADABRA.get());
				tabData.accept(PokefoodModItems.CURRY_CHERRY.get());
				tabData.accept(PokefoodModItems.CURRY_LIME.get());
				tabData.accept(PokefoodModItems.CURRY_FAIRY.get());
				tabData.accept(PokefoodModItems.CURRY_CATERPIE.get());
				tabData.accept(PokefoodModItems.CURRY_HORN_F.get());
				tabData.accept(PokefoodModItems.CURRY_FEEBASS.get());
				tabData.accept(PokefoodModItems.CURRY_STIFF.get());
				tabData.accept(PokefoodModItems.CURRY_STATIC_F.get());
				tabData.accept(PokefoodModItems.CURRY_RIB.get());
				tabData.accept(PokefoodModItems.CURRY_NIDO_F.get());
				tabData.accept(PokefoodModItems.CURRY_EAR_F.get());
				tabData.accept(PokefoodModItems.CURRY_SEAKING.get());
				tabData.accept(PokefoodModItems.CURRY_STIFF_F.get());
				tabData.accept(PokefoodModItems.CURRY_CLAW.get());
				tabData.accept(PokefoodModItems.CURRY_SPIDER_F.get());
				tabData.accept(PokefoodModItems.CURRY_INSECT_F.get());
				tabData.accept(PokefoodModItems.CURRY_BIBAREL.get());
				tabData.accept(PokefoodModItems.CURRY_CLOBBOPUS.get());
				tabData.accept(PokefoodModItems.CURRY_SPIDER.get());
				tabData.accept(PokefoodModItems.CURRY_DIG.get());
				tabData.accept(PokefoodModItems.CURRY_STATIC.get());
				tabData.accept(PokefoodModItems.CURRY_CRABRAWLER.get());
				tabData.accept(PokefoodModItems.CURRY_HORSE.get());
				tabData.accept(PokefoodModItems.CURRY_RIB_F.get());
				tabData.accept(PokefoodModItems.CURRY_LUVDISC.get());
				tabData.accept(PokefoodModItems.CURRY_LEMON.get());
				tabData.accept(PokefoodModItems.CURRY_PINK_FIN.get());
				tabData.accept(PokefoodModItems.CURRY_SAND_TAIL.get());
				tabData.accept(PokefoodModItems.CURRY_GREEN_SLICE.get());
				tabData.accept(PokefoodModItems.CURRY_SLOWPOKE.get());
				tabData.accept(PokefoodModItems.CURRY_TENTACLE_F.get());
				tabData.accept(PokefoodModItems.CURRY_WATERY.get());
				tabData.accept(PokefoodModItems.CURRY_TENTACLE.get());
				tabData.accept(PokefoodModItems.CURRY_CLAUNCHER.get());
				tabData.accept(PokefoodModItems.CURRY_FLUFFY.get());
				tabData.accept(PokefoodModItems.CURRY_MANTA.get());
				tabData.accept(PokefoodModItems.CURRY_WURMPLE.get());
				tabData.accept(PokefoodModItems.CURRY_HORSE_F.get());
				tabData.accept(PokefoodModItems.CURRY_WATERY_F.get());
				tabData.accept(PokefoodModItems.CURRY_MINUN.get());
				tabData.accept(PokefoodModItems.CURRY_PLUSLE.get());
				tabData.accept(PokefoodModItems.CURRY_FIN_F.get());
				tabData.accept(PokefoodModItems.CURRY_FLUFFY_F.get());
				tabData.accept(PokefoodModItems.CURRY_LEEK.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_DRINKS = REGISTRY.register("poke_food_drinks",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_drinks")).icon(() -> new ItemStack(PokefoodModItems.CUP_APRIJUICE_G.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.CUP_TEA.get());
				tabData.accept(PokefoodModItems.CUP_BLACK_TEA.get());
				tabData.accept(PokefoodModItems.CUP_ROSERADE_TEA.get());
				tabData.accept(PokefoodModItems.CUP_LEMONADE.get());
				tabData.accept(PokefoodModItems.CUP_FRESH_WATER.get());
				tabData.accept(PokefoodModItems.CUP_CHERRY_INFUSION.get());
				tabData.accept(PokefoodModItems.CUP_APRIJUICE_D.get());
				tabData.accept(PokefoodModItems.CUP_APRIJUICE_B.get());
				tabData.accept(PokefoodModItems.CUP_APRIJUICE_G.get());
				tabData.accept(PokefoodModItems.CUP_APRIJUICE_Y.get());
				tabData.accept(PokefoodModItems.CUP_APRIJUICE_R.get());
				tabData.accept(PokefoodModItems.CUP_APRIJUICE_P.get());
				tabData.accept(PokefoodModItems.CUP_APRIJUICE_W.get());
				tabData.accept(PokefoodModItems.CUP_COFFEE.get());
				tabData.accept(PokefoodModItems.CUP_ICED_COFFEE.get());
				tabData.accept(PokefoodModItems.CUP_LATTE.get());
				tabData.accept(PokefoodModItems.APRISHAKE_D.get());
				tabData.accept(PokefoodModItems.APRISHAKE_B.get());
				tabData.accept(PokefoodModItems.APRISHAKE_G.get());
				tabData.accept(PokefoodModItems.APRISHAKE_Y.get());
				tabData.accept(PokefoodModItems.APRISHAKE_R.get());
				tabData.accept(PokefoodModItems.APRISHAKE_P.get());
				tabData.accept(PokefoodModItems.APRISHAKE_W.get());
				tabData.accept(PokefoodModItems.CREAMED_COFFEE.get());
				tabData.accept(PokefoodModItems.CREAMED_LATTE.get());
				tabData.accept(PokefoodModItems.SODA_HIGH_TEA.get());
				tabData.accept(PokefoodModItems.SODA_PUNCH_TEA.get());
				tabData.accept(PokefoodModItems.SODA_ROSINE_TEA.get());
				tabData.accept(PokefoodModItems.SODA_POWER_LEMON.get());
				tabData.accept(PokefoodModItems.SODA_POP.get());
				tabData.accept(PokefoodModItems.SODA_CHERRISH.get());
				tabData.accept(PokefoodModItems.SODA_APRI_D.get());
				tabData.accept(PokefoodModItems.SODA_APRI_B.get());
				tabData.accept(PokefoodModItems.SODA_APRI_G.get());
				tabData.accept(PokefoodModItems.SODA_APRI_Y.get());
				tabData.accept(PokefoodModItems.SODA_APRI_R.get());
				tabData.accept(PokefoodModItems.SODA_APRI_P.get());
				tabData.accept(PokefoodModItems.SODA_APRI_W.get());
				tabData.accept(PokefoodModItems.SODA_SOMBRINE.get());
				tabData.accept(PokefoodModItems.SODA_SOMBRADE.get());
				tabData.accept(PokefoodModItems.GLASS_BEER.get());
				tabData.accept(PokefoodModItems.GLASS_BANANA_TEA_BEER.get());
				tabData.accept(PokefoodModItems.GLASS_CHERRY_CALCUIM_BEER.get());
				tabData.accept(PokefoodModItems.GLASS_BRANDY.get());
				tabData.accept(PokefoodModItems.GLASS_CIDRONADE.get());
				tabData.accept(PokefoodModItems.GLASS_ARCEUM.get());
				tabData.accept(PokefoodModItems.GLASS_APRI_D.get());
				tabData.accept(PokefoodModItems.GLASS_APRI_B.get());
				tabData.accept(PokefoodModItems.GLASS_APRI_G.get());
				tabData.accept(PokefoodModItems.GLASS_APRI_Y.get());
				tabData.accept(PokefoodModItems.GLASS_APRI_R.get());
				tabData.accept(PokefoodModItems.GLASS_APRI_P.get());
				tabData.accept(PokefoodModItems.GLASS_APRI_W.get());
				tabData.accept(PokefoodModItems.WINE_GLASS_RED.get());
				tabData.accept(PokefoodModItems.WINE_GLASS_WHITE.get());
				tabData.accept(PokefoodModItems.WINE_GLASS_ROSE.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> POKE_FOOD_ON_THE_GO = REGISTRY.register("poke_food_on_the_go",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pokefood.poke_food_on_the_go")).icon(() -> new ItemStack(PokefoodModItems.CALCUIM_BOX_11.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PokefoodModItems.CACTUS_CUBES.get());
				tabData.accept(PokefoodModItems.CREPE.get());
				tabData.accept(PokefoodModItems.CREPE_SUGAR.get());
				tabData.accept(PokefoodModItems.CREPE_WHIPPED_CREAM.get());
				tabData.accept(PokefoodModItems.CREPE_CHOCOLATE.get());
				tabData.accept(PokefoodModItems.CREPE_SPICY.get());
				tabData.accept(PokefoodModItems.FRIES.get());
				tabData.accept(PokefoodModItems.CHIPS.get());
				tabData.accept(PokefoodModItems.FRIED_LEEK.get());
				tabData.accept(PokefoodModItems.FRIED_CARROT.get());
				tabData.accept(PokefoodModItems.FRIED_BEETROOT.get());
				tabData.accept(PokefoodModItems.FRIED_ONION.get());
				tabData.accept(PokefoodModItems.FRIED_BAMBOO.get());
				tabData.accept(PokefoodModItems.FRIED_SWEET_BERRIES.get());
				tabData.accept(PokefoodModItems.FRIED_CACTUS_CUBES.get());
				tabData.accept(PokefoodModItems.CHEESE_BALLS.get());
				tabData.accept(PokefoodModItems.POPPED_CALCUIM.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_0.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_1.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_2.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_3.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_4.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_5.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_6.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_7.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_8.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_9.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_10.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_11.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_12.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_13.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_14.get());
				tabData.accept(PokefoodModItems.CALCUIM_BOX_15.get());
				tabData.accept(PokefoodModItems.FRIED_CHICKEN_LEG.get());
				tabData.accept(PokefoodModItems.FRIED_CLAW.get());
				tabData.accept(PokefoodModItems.FRIED_FLAMING_RIB.get());
				tabData.accept(PokefoodModItems.FRIED_FAIRY_MEAT.get());
				tabData.accept(PokefoodModItems.FRIED_STIFF_STEAK.get());
				tabData.accept(PokefoodModItems.FRIED_NIDO_MEAT.get());
				tabData.accept(PokefoodModItems.FRIED_DUCK_LEG.get());
				tabData.accept(PokefoodModItems.FRIED_HORSE_MEAT.get());
				tabData.accept(PokefoodModItems.FRIED_STATIC_MEAT.get());
				tabData.accept(PokefoodModItems.FRIED_WATERY_MEAT.get());
				tabData.accept(PokefoodModItems.FRIED_SPIDER_MEAT.get());
				tabData.accept(PokefoodModItems.FRIED_FLUFFY_MEAT.get());
				tabData.accept(PokefoodModItems.FRIED_FIN.get());
				tabData.accept(PokefoodModItems.FRIED_TAIL.get());
				tabData.accept(PokefoodModItems.FRIED_PM_EAR.get());
				tabData.accept(PokefoodModItems.FRIED_TENTACLE.get());
				tabData.accept(PokefoodModItems.FRIED_CATERPIE.get());
				tabData.accept(PokefoodModItems.FRIED_WURMPLE.get());
				tabData.accept(PokefoodModItems.FRIED_HERACROSS_HORN.get());
				tabData.accept(PokefoodModItems.FRIED_UNOWN.get());
				tabData.accept(PokefoodModItems.FRIED_STAR_BITE.get());
			})

					.build());

	@SubscribeEvent
	public static void buildTabContentsVanilla(BuildCreativeModeTabContentsEvent tabData) {

		if (tabData.getTabKey() == CreativeModeTabs.BUILDING_BLOCKS) {
			tabData.accept(PokefoodModBlocks.BANANA_WOOD.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_LOG.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_LOG_2.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_LOG_3.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_WOOD_STRIPPED.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_LOG_STRIPPED.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_LOG_2_STRIPPED.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_LOG_3_STRIPPED.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_PLANKS.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_STAIRS.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_SLAB.get().asItem());
		}

		if (tabData.getTabKey() == CreativeModeTabs.REDSTONE_BLOCKS) {
			tabData.accept(PokefoodModBlocks.BANANA_BUTTON.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_PRESSURE_PLATE.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_DOOR.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_TRAPDOOR.get().asItem());
			tabData.accept(PokefoodModBlocks.BANANA_FENCE_GATE.get().asItem());
		}

		if (tabData.getTabKey() == CreativeModeTabs.NATURAL_BLOCKS) {
			tabData.accept(PokefoodModBlocks.BANANA_FENCE.get().asItem());
		}
	}
}
